// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5665.RacknRoll2016.commands;

import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.command.Scheduler;

import org.usfirst.frc5665.RacknRoll2016.Robot;
import org.usfirst.frc5665.RacknRoll2016.RobotMap;
import org.usfirst.frc5665.RacknRoll2016.subsystems.Drive;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

/**
 *
 */
public class Teleop extends Command {

    public Teleop() {
        
        requires(Robot.drive);
        requires(Robot.wrist);
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	Joystick j = Robot.oi.getJoystick();
    	
    	Robot.drive.arcadeDrive(j.getRawAxis(4), j.getRawAxis(5));
    	Robot.arm.moveArm(j.getRawAxis(1));
    	Robot.wrist.openWrist(j.getRawAxis(2)-j.getRawAxis(3));
    	
    	//Start
    	Robot.oi.getButton(8).whileHeld(new RaisePlatform(3,-1.0));
    	//Back
    	Robot.oi.getButton(7).whileHeld(new UnlockPlatform());
    	//Right bumper
    	Robot.oi.getButton(6).whileHeld(new RaisePlatform(1,1.0));
    	//Left bumper
    	Robot.oi.getButton(5).whileHeld(new RaisePlatform(2,1.0));
    	//X
    	Robot.oi.getButton(3).whenPressed(new ToggleSpeed());
    	
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
